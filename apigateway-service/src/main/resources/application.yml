server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
spring:
  application:
    name: apigateway-service
 #Java Code로 구현 가능함.. (FilterConfig)
  cloud:
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloude Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: first-service
#          uri: http://localhost:8081/
          uri: lb://MY-FIRST-SERVICE # 디스커버리서비스에 등록되어진 이름.
          predicates: #조건문 같은거
            - Path=/first-service/**
          filters:
            - CustomFilter
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
        - id: second-service
#          uri: http://localhost:8082/
          uri: lb://MY-SECOND-SERVICE
          predicates:
            - Path=/second-service/**
          filters:
            - name: CustomFilter  #agrs가 없으면 name 생략 가능
            - name: LoggingFilter
              args:
                baseMessage: Hi there.
                preLogger: true
                postLogger: true
#            - AddRequestHeader=second-request, first-second-header2
#            - AddResponseHeader=second-response, first-second-header2

